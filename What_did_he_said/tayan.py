from rsa import rsa
import binascii
f = open("inp.txt", "r")
s = f.read()
f.close()




s = s.replace('\n', '')
s = s.replace(' ', '')
s = s.replace(':', '')
print(s)
n = int(s, 16)
n = 0x768968a416b375dffba476f8967c38f2066fbe82357cffc686f7e903a080c31c23d90a2747eefef89039e4d63a515f942a7ab78eb2e02838c7e5113f8c694d9107a773fa82dd026cb9eedce2c38c82b74257c0372dde1042170a1c503166bb59af773b122c3f32361fa8850f16698067eab4d727b60c8081e6a0e1dcbb3059397323a47343858f69b8ec7e67d544df5dab3086d0fee5e2e03eee2cf9f5861f1c6a30c4fcbc8739f72b1e1baf6bf31946aaee0b3cdc461001d1333e7653146f73b94ed68c52884787352f0de1959f68e959c1c42e15a37c0fd8c1901ef672ea6d6fda4c23301441a1429dab04c127a478adee649350a14e92b28546e5e20f8727

e = (1<<16) + 1
print(n)
def sqrt(x):
    l = 0
    r = x
    ans = -1
    while (l<=r):
        g = (l+r) // 2
        t = g * g
        if (t == x):
            return g , True
        if (t<x):
            l = g+1
        else:
            ans = g
            r = g-1
    return ans , False

def square(x):
    t , isSquare = sqrt(x)
    return isSquare


def fermatFactor(x):
    a = sqrt(x)[0]
    b = a *a - x
    while (not square(b)):
        a += 1
        b = a * a - x
    print (a + sqrt(b)[0], a - sqrt(b)[0])

p = 122326933943001152038548393343419195487856722723330989237468716168702418948676536255652231577936729434437853695160408410339629158564032676906004524726502183269193562292833858752695452397938116683902518310541643644656286495041297849893401003686696094919792753252913166726228010550337394986809806335101353725559
q = n // p
print(n%p)
print (p,'\n', q)
e = (1<<16) + 1
c = 3031565869307464860403024541415247329921400250939123942749838395951200906195912098273697094933173563915051800683854083535648696521225134188640597146291320940306966023022527795737939105353678041425121810336578029788678728492689897038902105263858426539175922247349958763874337794284582670373078371157478043666766632153165907104750922694389568508447019649539327738569521014874389971079086085667484095870696491620298576070689613747667174491562698225806160336130658485907211579204879419891734676846279171428451540120652619063097708660581027587603112924444447427892909901600125581441244483163410758972483726889907120692461
m = rsa(p, q, e , c)
print(m)


#print(hex(m))
#res = binascii.unhexlify(hex(m)[2:].encode())
#print(res)